# -----------------------------------задача------------------------------
# составьте словарь англо-русский (или любой другой словарь) из произвольных слов. Реализовать:
# поиск русских слов и их значений в английском языке
# поиск английских слов и их значений в русском языке
# если нет совпадений, необходимо отдельно об этом сообщить пользователю

# dictionary = {"hello": "привет",
#               "by": "пока",
#               "summer": "лето",
#               "winter": "зима",
#               "spring": "весна",
#               "autumn": "осень",
#               "cat": "кот",
#               "dog": "собака",
#               "box": "коробка",
#               "grey": "серый",
#               "red": "красный",
#               "blue": "синий",
#               "yellow": "желтый",
#               "green": "зеленый",
#               "purple": "фиолетовый"}
#
# print("Вы попали в наш словарь англо-русских слов")
# choice = int(input("Выберете поиск: c русских слов на английский - нажмите '1', либо поиск анлийских слов на русский - нажмите '2': "))
# world = input("Введите слово:").lower()
#
# if choice == 1:
#     if world not in dictionary.values():
#         print("В словаре нет такого слова")
#     keys = [key for key, value in dictionary.items() if value == world]
#     print(*keys)
# elif choice == 2:
#     if world not in dictionary:
#         print("В словаре нет такого слова")
#     if world in dictionary:
#         print(dictionary[world])

# -----------------------------------задача------------------------------
# составьте словарь стран и городов каждой страны(Для каждой страны минимум два города должно быть,
# иначе страна и город должна совпадать (например {Люксембург: [Люксембург]})). Для каждого города укажите,
# в какой стране он находится. Если город и страна совпадают напечатайте “Город-государство : название_города-государства”
#
# list_of_countries = {"Россия": ["Москва", "Тула"],
#                      "Италия": ["Рим", "Милан"],
#                      "Австралия": ["Сидней", "Мельбурн"],
#                      "Индия": ["Мумбаи", "Дели"],
#                      "США": ["Хьюстон", "Чикаго"],
#                      "Германия": ["Берлин", "Гамбург"],
#                      "Сингапур": ["Сингапур"],
#                      "Монако": ["Монако"],
#                      "Ватикан": ["Ватикан"]}
#
#
# print("Вы попали в наш словарь стран и городов каждой страны")
# cites = input("Введите город:").capitalize()
# if cites == "Сингапур" or cites == "Монако" or cites == "Ватикан":
#     for key in list_of_countries:
#         if type(list_of_countries[key]) == list:
#             for city in list_of_countries[key]:
#                 if city == cites:
#                     print(f"{city} это город государство!")
# elif cites:
#     for key in list_of_countries:
#         if type(list_of_countries[key]) == list:
#             for city in list_of_countries[key]:
#                 if city == cites:
#                     print(f"Город {city} находится в стране {key}")


# -----------------------------------задача------------------------------
# """Петя перешёл в другую школу. На уроке физкультуры ему понадобилось определить своё место в строю.
# Помогите ему это сделать. Программа получает на вход невозрастающую последовательность натуральных чисел,
# означающих рост каждого человека в строю. После этого вводится число X – рост Пети.
# Все числа во входных данных натуральные и не превышают 200. Выведите номер, под которым Петя должен встать в строй.
# Если в строю есть люди с одинаковым ростом, таким же, как у Пети, то он должен встать после них."""
#
# from random import randint
#
# height = []
# for i in range(10):
#     height.append(randint(150, 180))
# height.sort(reverse=True)
# print(height)
#
# height_petya = 162
#
# for i in height:
#     if i == height_petya:
#         print(f"Петя должен быть в{len(height) - height[::-1].index(i + 1)}месте")
#
#     elif i > height_petya:
#         if height.index(i) + 1 == len(height):
#             print(len(height) + 1)
#     elif i < height_petya:
#         print(height.index(i) + 1)
#         break
